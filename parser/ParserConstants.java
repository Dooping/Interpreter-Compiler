/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DECL = 4;
  /** RegularExpression Id. */
  int IN = 5;
  /** RegularExpression Id. */
  int END = 6;
  /** RegularExpression Id. */
  int WHILE = 7;
  /** RegularExpression Id. */
  int DO = 8;
  /** RegularExpression Id. */
  int ASSOC = 9;
  /** RegularExpression Id. */
  int DOT = 10;
  /** RegularExpression Id. */
  int IF = 11;
  /** RegularExpression Id. */
  int THEN = 12;
  /** RegularExpression Id. */
  int ELSE = 13;
  /** RegularExpression Id. */
  int RefAssoc = 14;
  /** RegularExpression Id. */
  int TWOEXPR = 15;
  /** RegularExpression Id. */
  int BOOL = 16;
  /** RegularExpression Id. */
  int Num = 17;
  /** RegularExpression Id. */
  int PLUS = 18;
  /** RegularExpression Id. */
  int MINUS = 19;
  /** RegularExpression Id. */
  int TIMES = 20;
  /** RegularExpression Id. */
  int DIV = 21;
  /** RegularExpression Id. */
  int LPAR = 22;
  /** RegularExpression Id. */
  int RPAR = 23;
  /** RegularExpression Id. */
  int LCHAV = 24;
  /** RegularExpression Id. */
  int RCHAV = 25;
  /** RegularExpression Id. */
  int BIGGER = 26;
  /** RegularExpression Id. */
  int SMALLER = 27;
  /** RegularExpression Id. */
  int EQUALS = 28;
  /** RegularExpression Id. */
  int DIF = 29;
  /** RegularExpression Id. */
  int AND = 30;
  /** RegularExpression Id. */
  int OR = 31;
  /** RegularExpression Id. */
  int EL = 32;
  /** RegularExpression Id. */
  int FUN = 33;
  /** RegularExpression Id. */
  int FUNT = 34;
  /** RegularExpression Id. */
  int ARROW = 35;
  /** RegularExpression Id. */
  int ARROWT = 36;
  /** RegularExpression Id. */
  int INT = 37;
  /** RegularExpression Id. */
  int BOOLEAN = 38;
  /** RegularExpression Id. */
  int REF = 39;
  /** RegularExpression Id. */
  int COLON = 40;
  /** RegularExpression Id. */
  int COMMA = 41;
  /** RegularExpression Id. */
  int VAR = 42;
  /** RegularExpression Id. */
  int LBRACKET = 43;
  /** RegularExpression Id. */
  int RBRACKET = 44;
  /** RegularExpression Id. */
  int CONCAT = 45;
  /** RegularExpression Id. */
  int HD = 46;
  /** RegularExpression Id. */
  int TL = 47;
  /** RegularExpression Id. */
  int Id = 48;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"decl\"",
    "\"in\"",
    "\"end\"",
    "\"while\"",
    "\"do\"",
    "\"=\"",
    "\".\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\":=\"",
    "\";\"",
    "<BOOL>",
    "<Num>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"!=\"",
    "\"&&\"",
    "\"||\"",
    "\"\\n\"",
    "\"fun\"",
    "\"funT\"",
    "\"=>\"",
    "\"->\"",
    "\"int\"",
    "\"bool\"",
    "\"ref\"",
    "\":\"",
    "\",\"",
    "\"var\"",
    "\"[\"",
    "\"]\"",
    "\"::\"",
    "\"hd\"",
    "\"tl\"",
    "<Id>",
  };

}
